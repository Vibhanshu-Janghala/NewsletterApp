{"version":3,"sources":["Components/Newsletter.js","Container/NewsletterContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Newsletter","props","useState","email","setEmail","className","formState","onSubmit","e","preventDefault","formSubmit","type","name","placeholder","onChange","target","value","NewsletterContainer","setFormState","handleFormSubmit","a","fetch","method","headers","body","JSON","stringify","mail","response","console","log","status","error","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA2CeA,EAzCI,SAACC,GAChB,IAKA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAIA,OACI,sBACIC,UAAU,yHADd,UAEI,qBAAKA,UAAU,8DAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,oDAAd,yCACA,mBAAGA,UAAU,sCAAb,uGAIR,qBAAKA,UAAU,uFAAf,SACyB,KAApBJ,EAAMK,UAAmB,sBAAMC,SApBvB,SAACC,GAClBA,EAAEC,iBACFR,EAAMS,WAAWP,GACjBC,GAAS,iBAAM,OAiBmB,SAClB,sBAAKC,UAAU,uDAAf,UACI,uBACIA,UAAU,mHACVM,KAAK,OAAOC,KAAK,QAAQC,YAAY,mBACrCC,SAnBP,SAACN,GAClBJ,GAAS,kBAAMI,EAAEO,OAAOC,YAoBJ,wBACIX,UAAU,gFACVM,KAAK,SAFT,4BASR,mBAAGN,UAAU,yDAAb,SAAuEJ,EAAMK,kBCJlFW,EAhCa,WACxB,MAAkCf,mBAAS,IAA3C,mBAAOI,EAAP,KAAkBY,EAAlB,KACMC,EAAgB,uCAAG,WAAOhB,GAAP,eAAAiB,EAAA,6DACrBF,GAAa,iBAAM,aADE,kBAGMG,MAAM,OAAQ,CAC7BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACC,KAAKxB,MARlB,OAGXyB,EAHW,OAWjBC,QAAQC,IAAIF,GACY,MAApBA,EAASG,OACTb,GAAa,iBAAM,cAEnBW,QAAQG,MAAMJ,GACdV,GAAa,iBAAM,uBAhBN,gDAmBjBW,QAAQG,MAAR,MACAd,GAAa,iBAAM,sBApBF,QAsBrBe,YAAW,WACPf,GAAa,iBAAM,QACpB,KAxBkB,yDAAH,sDA0BtB,OACI,cAAC,EAAD,CAAYR,WAAYS,EAAkBb,UAAWA,KCxB9C4B,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16804bef.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nconst Newsletter = (props) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.formSubmit(email);\r\n        setEmail(() => \"\");\r\n    }\r\n    const [email, setEmail] = useState(\"\");\r\n    const handleChange = (e) => {\r\n        setEmail(() => e.target.value);\r\n    }\r\n    return (\r\n        <div\r\n            className=\"flex flex-col max-w-6xl md:h-56 bg-white rounded-lg shadow-lg overflow-hidden md:flex-row my-40 md:ml-auto md:mr-auto \">\r\n            <div className=\"md:flex items-center justify-center md:w-1/2 md:bg-gray-700\">\r\n                <div className=\"py-6 px-8 md:py-0\">\r\n                    <h2 className=\"text-gray-700 text-2xl font-bold md:text-gray-100\">Sign Up For Project Updates</h2>\r\n                    <p className=\"mt-2 text-gray-600 md:text-gray-400\">Lorem ipsum dolor sit, amet consectetur\r\n                        adipisicing elit. Consectetur obcaecati odio</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-center pb-6 md:py-0 md:w-1/2 md:border-b-8 border-gray-700\">\r\n                {props.formState === \"\" ? <form onSubmit={handleSubmit}>\r\n                        <div className=\"flex flex-col rounded-lg overflow-hidden sm:flex-row\">\r\n                            <input\r\n                                className=\"py-3 px-5 bg-gray-200 text-gray-800 border-gray-300 border-2 outline-none placeholder-gray-500 focus:bg-gray-100\"\r\n                                type=\"text\" name=\"email\" placeholder=\"Enter your email\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <button\r\n                                className=\"py-3 px-4 bg-gray-700 text-gray-100 font-semibold uppercase hover:bg-gray-600\"\r\n                                type=\"submit\"\r\n                            >\r\n                                subscribe\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    :\r\n                    <p className=\"mt-2 text-gray-600 md:text-gray-400 text-3xl font-bold\">{props.formState}</p>}\r\n            </div>\r\n        </div>);\r\n}\r\nexport default Newsletter;","import Newsletter from \"../Components/Newsletter\";\r\nimport {useState} from \"react\";\r\n\r\nconst NewsletterContainer = () => {\r\n    const [formState, setFormState] = useState(\"\");\r\n    const handleFormSubmit = async (email) => {\r\n        setFormState(() => \"Loading\");\r\n        try {\r\n            const response = await fetch(\"add/\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({mail:email})\r\n                }\r\n            );\r\n            console.log(response);\r\n            if (response.status === 200) {\r\n                setFormState(() => \"Success\");\r\n            } else {\r\n                console.error(response)\r\n                setFormState(() => \"Failed.Try again\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setFormState(() => \"Failed.Try again\");\r\n        }\r\n        setTimeout(() => {\r\n            setFormState(() => \"\")\r\n        }, 1000)\r\n    }\r\n    return (\r\n        <Newsletter formSubmit={handleFormSubmit} formState={formState}/>\r\n    );\r\n}\r\nexport default NewsletterContainer;","import NewsletterContainer from \"./Container/NewsletterContainer\";\n\nfunction App() {\n  return (\n    <NewsletterContainer />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}